#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Game()\ -\ \r\n\ Constructor\ for\ objects\ of\ class\ Game,\r\n\ Default\ value\ for\ game\ attributes\r\n
comment1.params=penaltyValue\ finalValue\ playersTotal\ minDiceValue\ maxDiceValue
comment1.target=Game(int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Game\ class\ constructor\ (int\ penaltyValue,\ int\ finalValue,\ int\ playersTotal,\ int\ minDiceValue,\ int\ maxDiceValue)\ -\r\n\ User\ set\ the\ penalty\ ,\ final\ position,\ the\ total\ players,\ minDiceValue,\ maxDiceValue\r\n\ \r\n\ @param\ int\ penaltyValue\ for\ the\ penalty\r\n\ @param\ int\ finalValue\ for\ final\ position\ of\ the\ game\r\n\ @param\ int\ playersTotal\ for\ total\ players\ who\ play\ the\ game\r\n\ @param\ int\ minDiceValue\ for\ the\ lowest\ value\ from\ the\ dices'\ roll\ result\r\n\ @param\ int\ maxDiceValue\ for\ the\ highest\ value\ from\ the\ dices'\ roll\ result\r\n
comment10.params=
comment10.target=int\ getFinalPosition()
comment10.text=\r\n\ getFinalPosition()\ -\r\n\ Get\ the\ final\ point\ for\ the\ current\ game\r\n\ \r\n\ @return\ int\ -\ return\ the\ final\ location\ value\r\n
comment11.params=
comment11.target=int\ getMaximalDiceNumber()
comment11.text=\r\n\ getMaximalDiceNumber()\r\n\ Get\ the\ maximum\ dices'\ roll\ value\r\n
comment12.params=
comment12.target=int\ getMinimalDiceNumber()
comment12.text=\r\n\ getMinimalDiceNumber()\ -\r\n\ Get\ the\ minimum\ dices'\ roll\ value\r\n
comment13.params=
comment13.target=int\ getPenalty()
comment13.text=\r\n\ getPenalty()\ -\r\n\ Get\ the\ penaltis'\ value\ for\ the\ recent\ game\r\n\ \r\n\ @return\ int\ -\ return\ the\ value\ of\ penalty\r\n
comment14.params=players\ champion
comment14.target=void\ multiPlayersWin(java.util.ArrayList,\ java.util.List)
comment14.text=\r\n\ multiPlayersWin(ArrayList<Player>,\ players\ List<Integer>\ champion)\ -\r\n\ Doing\ check\ for\ the\ player(s),\ -\ it\ could\ be\ more\ than\ one\ player,\ but\ not\ all\ players\ -\ reach\ the\ final\ position\ in\ the\ same\ time,\r\n\ and\ display\ it\ to\ the\ screen\r\n\ \r\n\ @param\ ArrayList<Player>\ players\ -\ Passing\ this\ value\ so\ that\ this\ method\ have\ an\ array\ to\ do\ the\ validation\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment15.params=
comment15.target=void\ newGame()
comment15.text=\r\n\ newGame()\ -\r\n\ The\ main\ method,\ players\ will\ interface\ with\ this\ method\ and\ choose\ the\ sufficient\ option,\ \r\n\ It\ comes\ with\ validation\ input\ for\ the\ players\ \r\n
comment16.params=players\ champion
comment16.target=void\ playersGetPenalty(java.util.ArrayList,\ java.util.List)
comment16.text=\r\n\ PlayersGetPenalty(ArrayList<Player>\ players,\ List<Integer>\ champion)\ -\r\n\ Examine\ for\ every\ players'\ location\ \r\n\ Shows\ the\ players'\ position\ whether\ they\ get\ the\ snake\ penalized\ or\ going\ forward\ without\ the\ hitch\r\n\ \r\n\ @param\ ArrayList<Player>\ players\ -\ players\ array\ value\ for\ show\ the\ movements\ for\ each\ player,\ either\ get\ the\ penalized\ or\ going\ forward\ seamlessly\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment17.params=
comment17.target=void\ printHelp()
comment17.text=\r\n\ printHelp()\ -\r\n\ Display\ direction\ how\ to\ play\ the\ game\r\n
comment18.params=
comment18.target=void\ printIntroduction()
comment18.text=\r\n\ printIntroduction()\ -\ \r\n\ Display\ the\ game\ introduction\ at\ the\ first\ time\ the\ player\ activate\ the\ game\r\n
comment19.params=
comment19.target=void\ printMenu()
comment19.text=\r\n\ printMenu()\ -\ \r\n\ Display\ the\ option\ menu\ for\ players\r\n
comment2.params=players\ champion
comment2.target=void\ checkingWinners(java.util.ArrayList,\ java.util.List)
comment2.text=\r\n\ checkingWinners(ArrayList<Player>\ players,\ List<Integer>\ champion)\ -\ \r\n\ Validate\ the\ availability\ for\ winners,\ if\ there\ is\ a\ game\ winner\ there\ will\ be\ notification\ on\ the\ screen\ and\r\n\ \ Players\ must\ start\ a\ new\ game\ if\ they\ want\ to\ play\ the\ game\ again\ or\ they\ can\ exit\ if\ they\ want\r\n\ @param\ ArrayList<Player>\ players\r\n
comment20.params=
comment20.target=int\ rollDice()
comment20.text=\r\n\ rollDice()\ -\ \r\n\ Rolling\ the\ dice\ and\ get\ the\ random\ number\ from\ the\ dice\ range\ (range\ limit\ included)\r\n\ \r\n\ @return\ int\ -\ return\ the\ roll\ result\ value\r\n
comment21.params=playerLimit
comment21.target=void\ setAllowedPlayer(int)
comment21.text=\r\n\ setAllowedPlayer(int\ playerLimit)\r\n\ Set\ the\ allowable\ player\ that\ can\ play\ the\ game\r\n\ \r\n\ @param\ int\ playerLimit\ -\ Player\ insert\ the\ total\ player\ that\ can\ play\ the\ game\r\n
comment22.params=winPosition
comment22.target=void\ setFinalPosition(int)
comment22.text=\r\n\ setFinalPosition(int\ winPosition)\ -\r\n\ Set\ the\ final\ position\ for\ the\ game\ that\ want\ to\ be\ played\r\n\ \r\n\ @param\ int\ winPosition\ -\ Player\ set\ the\ final\ point\r\n
comment23.params=maxDiceValue
comment23.target=void\ setMaximalDiceNumber(int)
comment23.text=\r\n\ setMaximalDiceNumber(int\ maxDiceValue)\ -\r\n\ Set\ the\ maximum\ dices'\ roll\ value\r\n\ @param\ int\ maxDiceValue\ -\ user\ input\ the\ maximal\ value\ they\ want\ to\ show\ in\ dices'\ roll\ result\r\n
comment24.params=minDiceValue
comment24.target=void\ setMinimalDiceNumber(int)
comment24.text=\r\n\ setMinimalDiceNumber(int\ minDiceValue)\ -\r\n\ Set\ the\ minimum\ value\ for\ the\ dices'\ roll\r\n\ @param\ int\ minDiceValue\ -\ user\ input\ the\ lowest\ value\ they\ want\ to\ show\ in\ dices'\ roll\ result\r\n
comment25.params=penaltyValue
comment25.target=void\ setPenalty(int)
comment25.text=\r\n\ setPenalty(int\ penaltyValue)\ -\r\n\ Set\ the\ penaltys'\ value\ that\ will\ be\ substracted\ from\ players'\ current\ position,\ \r\n\ if\ they\ reach\ the\ snake\ point\r\n\ \r\n\ @param\ int\ penaltyValue\ -\ Player\ set\ the\ penalty\ value\r\n
comment26.params=position
comment26.target=int\ snakePenalty(int)
comment26.text=\r\n\ snakePenalty\ (int\ position)\ -\r\n\ Check\ in\ case\ the\ position\ passed\ from\ parameter\ is\ the\ same\ position\ with\ the\ snakes\ spot\r\n\ \r\n\ @param\ int\ position\ -\ Player\ position\ in\ the\ board\ during\ the\ game\r\n\ @return\ int\ -\ return\ the\ subtracted\ position\ if\ players'\ position\ is\ same\ with\ snake\ point,\r\n\ if\ is\ not,\ the\ return\ value\ will\ be\ same\ with\ players'\ current\ position\r\n
comment27.params=players\ champion
comment27.target=void\ updatePlayerPosition(java.util.ArrayList,\ java.util.List)
comment27.text=\r\n\ updatePlayerPosition(ArrayList<Player>\ players\ ,\ List<Integer>\ champion)\ -\r\n\ Update\ the\ players'\ position\ after\ rolling\ the\ dice,\r\n\ Set\ the\ start\ and\ current\ position\ for\ the\ players\r\n\ \r\n\ @param\ ArrayList<Player>\ players\ -\ as\ a\ value\ for\ set\ every\ player\ position\ in\ Players\ array\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment3.params=players\ champion
comment3.target=void\ createNewPlayer(java.util.ArrayList,\ java.util.List)
comment3.text=\r\n\ createNewPlayer(ArrayList<Player>\ players,\ List<Integer>\ champion)\ -\ \r\n\ Create\ new\ player\ and\ set\ the\ player\ position,\ \r\n\ there\ will\ be\ validation\ steps\ for\ player(s)\ before\ input\ a\ new\ player\ \r\n\ \r\n\ @param\ ArrayList<Player>\ players\ -\ Player\ object\ in\ array\ list\ for\ the\ use\ of\ set\ or\ create\ the\ players\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment4.params=
comment4.target=void\ displayNoPlayer()
comment4.text=\r\n\ displayNoPlayer()\ -\ \r\n\ Show\ error\ if\ there\ is\ no\ set\ up\ player\r\n
comment5.params=players
comment5.target=void\ displayPlayerPositions(java.util.ArrayList)
comment5.text=\r\n\ displayPlayersPositions(ArrayList<Player>\ players)\ -\ \r\n\ Show\ information\ about\ the\ players\ position\ during\ the\ game\r\n\ @param\ ArrayList<Player>\ players\ -\ Passing\ the\ players\ array\ so\ that\ it\ can\ be\ displayed\ for\ players'\ position\ \r\n
comment6.params=
comment6.target=void\ exitGame()
comment6.text=\r\n\ exitGame()\ -\ \r\n\ Stop\ the\ program\ at\ any\ time,\ comes\ with\ verification\ to\ make\ sure\ the\ players\ really\ want\ to\ exit\ the\ game\r\n
comment7.params=players\ champion
comment7.target=void\ gameDraw(java.util.ArrayList,\ java.util.List)
comment7.text=\r\n\ gameDraw(ArrayList<Player>\ players,\ List<Integer>\ champion)\ -\ \r\n\ Display\ the\ situation\ if\ all\ players\ reach\ final\ position\ in\ the\ same\ time\r\n\ \r\n\ @param\ ArrayList<Player>\ players\ -\ Checking\ every\ players\ position\ to\ validate\ draw\ situation\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment8.params=players\ champion
comment8.target=void\ gamePlayed(java.util.ArrayList,\ java.util.List)
comment8.text=\r\n\ gamePlayed(ArrayList<Player>\ players,\ List<Integer>\ champion)\ -\ \r\n\ All\ the\ step\ needed\ for\ the\ game\ to\ proceed\ in\ every\ turn,\r\n\ This\ method\ will\ invoke\ other\ method\ for\ player\ to\ roll\ the\ dice\ and\ move\ players\ position,\r\n\ The\ method\ also\ verified\ the\ players'\ position\ whether\ they\ get\ snake\ point\ or\ final\ position\r\n\ @param\ ArrayList<Player>\ players\ -\ Player\ object\ in\ array\ list\ as\ a\ validation\ an\ passing\ value\ for\ methods\ inside\r\n\ @param\ List<Integer>\ champion\ -\ Integer\ object\ that\ contain\ the\ numbers\ which\ indicate\ if\ there\ is\ any\ player\ has\ win\ the\ game\r\n
comment9.params=
comment9.target=int\ getAllowedPlayer()
comment9.text=\r\n\ getAllowedPlayer()\ -\ \r\n\ Get\ the\ quantity\ of\ allowable\ player\ \r\n\ \r\n\ @return\ int\ -\ the\ amount\ of\ total\ players\r\n
numComments=28
